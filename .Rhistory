modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',unname(unlist(predict(modelo[[input$bairro]],newdata=data.frame(`Area Util`=input$metragem,Condominio=input$condominio,Vagas=input$vagas))))))
})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(leaflet)
library(shinydashboard)
library(tidyverse)
library(plotly)
leitura_modelos <- function(c){
readRDS(paste0('modelos aluguel/',c,'.rds'))
}
lapply(bairros, leitura_modelos,USE.NAMES=T)
modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',unname(unlist(predict.lm(modelo,newdata=data.frame(`Area Util`=input$metragem,Condominio=input$condominio,Vagas=input$vagas))))))
})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
unname(unlist(predict.lm(modelo,newdata=data.frame(`Area Util`=20,Condominio=30,Vagas=40)))))
unname(unlist(predict.lm(modelo,newdata=data.frame(`Area Util`=20,Condominio=30,Vagas=40))))
unname(unlist(predict.lm(modelo,data.frame(`Area Util`=20,Condominio=30,Vagas=40))))
unname(unlist(predict.lm(modelo,data.frame(`Area Util`=20,Condominio=30,Vagas=40))))
unname(unlist(predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40))))
library(shiny)
library(leaflet)
library(shinydashboard)
library(tidyverse)
library(plotly)
leitura_modelos <- function(c){
readRDS(paste0('modelos aluguel/',c,'.rds'))
}
lapply(bairros, leitura_modelos,USE.NAMES=T)
modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',unname(unlist(predict.lm(modelo,newdata=list(`Area Util`=input$metragem,Condominio=input$condominio,Vagas=input$vagas))))))
})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(leaflet)
library(shinydashboard)
library(tidyverse)
library(plotly)
leitura_modelos <- function(c){
readRDS(paste0('modelos aluguel/',c,'.rds'))
}
lapply(bairros, leitura_modelos,USE.NAMES=T)
modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',unname(unlist(predict.lm(modelo,newdata=list(`Area Util`=input$meter,Condominio=input$condominio,Vagas=input$vagas))))))
})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
predict.lm(modelo,newdata=list(`Area Util`=input$meter,Condominio=input$condominio,Vagas=input$vagas))
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40))
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unlist
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unname
library(shiny)
library(leaflet)
library(shinydashboard)
library(tidyverse)
library(plotly)
leitura_modelos <- function(c){
readRDS(paste0('modelos aluguel/',c,'.rds'))
}
lapply(bairros, leitura_modelos,USE.NAMES=T)
modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',unname(predict.lm(modelo,newdata=list(`Area Util`=input$meter,Condominio=input$condominio,Vagas=input$vagas)))))
})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(leaflet)
library(shinydashboard)
library(tidyverse)
library(plotly)
leitura_modelos <- function(c){
readRDS(paste0('modelos aluguel/',c,'.rds'))
}
lapply(bairros, leitura_modelos,USE.NAMES=T)
modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
estimativa <- unname(predict.lm(modelo,newdata=list(`Area Util`=input$meter,Condominio=input$condominio,Vagas=input$vagas)))
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',format(estimativa,nsmall = 2,small.mark = ','))
)})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(leaflet)
library(shinydashboard)
library(tidyverse)
library(plotly)
leitura_modelos <- function(c){
readRDS(paste0('modelos aluguel/',c,'.rds'))
}
lapply(bairros, leitura_modelos,USE.NAMES=T)
modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',format(unname(predict.lm(modelo,newdata=list(`Area Util`=input$meter,Condominio=input$condominio,Vagas=input$vagas))),nsmall = 2,small.mark = ','))
)})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unname
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unname %>%
format(digits=2)
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unname %>% format(nsmall=2)
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unname %>% format(nsmall=2,decimal.mark = ',')
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unname %>% format(digits =2,decimal.mark = ',')
predict.lm(modelo,list(`Area Util`=20,Condominio=30,Vagas=40)) %>% unname %>% format(digits =4,decimal.mark = ',')
library(shiny)
library(leaflet)
library(shinydashboard)
library(tidyverse)
library(plotly)
leitura_modelos <- function(c){
readRDS(paste0('modelos aluguel/',c,'.rds'))
}
lapply(bairros, leitura_modelos,USE.NAMES=T)
modelo <- readRDS('modelos aluguel/Asa Norte.rds')
bairros <- c("Noroeste","Asa Norte","Asa Sul","Lago Norte","Lago Sul")
opcoes <- c('Aluguel',"Venda")
analise <- readRDS('banco_shiny.RDS') %>% mutate(ID=1:n())
titulo <- dashboardHeader(title = 'Imóveis do wimoveis (prototipo)')
menu_lateral <-dashboardSidebar(sidebarMenu(
#menuItem('Aluguel',tabName = 'aluguel'),
#menuItem('Compra e Venda',tabName = 'venda'),
selectInput('bairro', 'Escolha o bairro', choices = bairros),
radioButtons('procura', 'O que você procura?', choices = opcoes),
sliderInput('quartos','Número de quartos:',min = 1,max=max(analise$quartos,na.rm = T),value=4),
#sliderInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50)
numericInput('meter','Metragem:',min = min(analise$area_util_m2,na.rm = T),max=max(analise$area_util_m2,na.rm = T),value=50),
numericInput('condominio','Condominio:',min = min(analise$condominio,na.rm = T),max=100000,value=1000),
numericInput('vagas','N° de Vagas:',min = 1,max=max(analise$vagas,na.rm = T),value=1),
checkboxGroupInput('status','status(não implementado)',choices =c('Em processo','Aprovado','Edital') )
))
corpo <- dashboardBody(
fluidRow(
box(plotlyOutput('precos')),
box(plotlyOutput('metragem')),
infoBoxOutput('estima')),
leafletOutput('mapa')
)
ui <- dashboardPage(header=titulo,sidebar=menu_lateral,body=corpo)
server <- function(input, output) {
banco_filtro <- reactive({
filter(analise,bairro==input$bairro & str_detect(tipo_anuncio,input$procura) & quartos<=input$quartos & area_util_m2<=input$meter)
})
output$precos <- renderPlotly({
plot_ly(data = banco_filtro(),x=~get(input$procura),type = 'bar') %>%
layout(title= 'Distribuição dos preços',
xaxis=list(title=paste('Valor de',input$procura ))
)
})
output$metragem <- renderPlotly({
plot_ly(data = banco_filtro(),x=~area_util_m2,type = 'bar') %>%
layout(title= 'Distribuição de metragem',
xaxis=list(title='Área Útil'))
})
output$estima <- renderInfoBox({
infoBox("Preço Estimado",
paste('R$',format(unname(predict.lm(modelo,newdata=list(`Area Util`=input$meter,Condominio=input$condominio,Vagas=input$vagas))) %>% round(2),nsmall = 2,decimal.mark = ','))
)})
output$mapa <-  renderLeaflet({
suppressWarnings({leaflet(banco_filtro()) %>%
addTiles() %>%
addMarkers(lng = ~longitude,
lat = ~latitude,
popup = ~paste('R$',get(input$procura),'com',area_util_m2,'metros quadrados','ID',ID))})
})
}
# Run the application
shinyApp(ui = ui, server = server)
